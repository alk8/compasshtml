<!doctype html>
<html lang="ru">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <title>–ö–æ–º–ø–∞—Å</title>
  <style>
    body { font-family: sans-serif; margin: 0; padding: 16px; background: #111; color: #eee; }
    .arrow { font-size: 64px; text-align: center; margin-top: 24px; }
    .dist { font-size: 28px; text-align: center; margin-top: 8px; }
    .info { font-size: 14px; opacity: .7; text-align: center; margin-top: 8px; }
    button { width: 100%; padding: 12px; margin-top: 16px; font-size: 18px; }
  </style>
  <script>
    function toRad(d){return d*Math.PI/180}
    function toDeg(r){return r*180/Math.PI}
    function haversine(lat1, lon1, lat2, lon2){
      const R=6371000;
      const dLat=toRad(lat2-lat1);
      const dLon=toRad(lon2-lon1);
      const a=Math.sin(dLat/2)**2+Math.cos(toRad(lat1))*Math.cos(toRad(lat2))*Math.sin(dLon/2)**2;
      const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));
      return Math.round(R*c);
    }
    function bearing(lat1, lon1, lat2, lon2){
      const œÜ1=toRad(lat1), œÜ2=toRad(lat2), Œª=toRad(lon2-lon1);
      const y=Math.sin(Œª)*Math.cos(œÜ2);
      const x=Math.cos(œÜ1)*Math.sin(œÜ2)-Math.sin(œÜ1)*Math.cos(œÜ2)*Math.cos(Œª);
      const Œ∏=toDeg(Math.atan2(y,x));
      return (Œ∏+360)%360;
    }
    function sector8(b){
      const d=((b%360)+360)%360;
      if(d>=337.5||d<22.5) return ['‚Üë','–°'];
      if(d<67.5) return ['‚Üó','–°–í'];
      if(d<112.5) return ['‚Üí','–í'];
      if(d<157.5) return ['‚Üò','–Æ–í'];
      if(d<202.5) return ['‚Üì','–Æ'];
      if(d<247.5) return ['‚Üô','–Æ–ó'];
      if(d<292.5) return ['‚Üê','–ó'];
      return ['‚Üñ','–°–ó'];
    }
    async function validate(activeGameId, teamId){
      alert('–í–∞–ª–∏–¥–∞—Ü–∏—è –≤ —ç—Ç–æ–º –¥–µ–º–æ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ backend');
    }
    window.addEventListener('DOMContentLoaded', ()=>{
      const params=new URLSearchParams(location.search);
      const tLat=parseFloat(params.get('lat'));
      const tLon=parseFloat(params.get('lon'));
      const radius=parseInt(params.get('r')||'15',10);
      const agid=params.get('ag');
      const tid=params.get('tm');
      const arrow=document.getElementById('arrow');
      const distEl=document.getElementById('dist');
      const info=document.getElementById('info');
      if(!('geolocation' in navigator)){ info.textContent='–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'; return; }
      navigator.geolocation.watchPosition(pos=>{
        const {latitude, longitude} = pos.coords;
        const d=haversine(latitude, longitude, tLat, tLon);
        const b=bearing(latitude, longitude, tLat, tLon);
        const [sym, label]=sector8(b);
        arrow.textContent=sym+" "+label;
        distEl.textContent=d+" –º";
        info.textContent="–†–∞–¥–∏—É—Å: "+radius+" –º";
        if(d<=radius){ validate(agid, tid); }
      }, err=>{ info.textContent='–û—à–∏–±–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: '+err.message; }, {enableHighAccuracy:true, maximumAge:1000, timeout:10000});
    });
  </script>
  </head>
<body>
  <div class="arrow" id="arrow">üß≠</div>
  <div class="dist" id="dist">‚Äî –º</div>
  <div class="info" id="info">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è‚Ä¶</div>
  <button onclick="history.back()">–ó–∞–∫—Ä—ã—Ç—å</button>
</body>
</html>


